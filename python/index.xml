<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python 学习 on BANILIY</title>
    <link>https://baniliy.github.io/python/</link>
    <description>Recent content in Python 学习 on BANILIY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://baniliy.github.io/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rasterio使用</title>
      <link>https://baniliy.github.io/python/rasterio/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://baniliy.github.io/python/rasterio/</guid>
      <description>rasterio使用&gt;rasterio使用 # 参考
python栅格数据处理学习记录二之rasterio基础 - 知乎
python：使用机器学习算法对卫星遥感影像进行分类 - 简书
使用Rasterio读取栅格数据的实例讲解-面圈网
1、安装&gt;1、安装 # conda install -c conda-forge rasterio conda install -c conda-forge matplotlib rasterio可以读取ENVI标准格式、tif格式等栅格数据
2、波段计算&gt;2、波段计算 # import rasterio from rasterio.</description>
    </item>
    
    <item>
      <title>Conda配置</title>
      <link>https://baniliy.github.io/python/conda/</link>
      <pubDate>Fri, 17 Feb 2023 20:31:47 +0800</pubDate>
      
      <guid>https://baniliy.github.io/python/conda/</guid>
      <description>常用命令&gt;常用命令 # # 查看安装过的包 conda list # 查看存在的虚拟环境 conda env list # 检查更新 conda update conda # 创建虚拟环境 conda create -n your_env_name python=x.x # 激活或者切换虚拟环境 activate your_env_name # Windows # 对虚拟环境中安装额外的包 conda install -n your_env_name [package] # 关闭虚拟环境(即从当前环境退出返回使用PATH环境中的默认python版本) deactivate env_name # activate root`切回root环境 # 删除虚拟环境 conda remove -n your_env_name --all # 删除环境中的某个包 conda remove --name $your_env_name $package_name jupyter notebook保存文件默认路径更改&gt;jupyter notebook保存文件默认路径更改 # 1.</description>
    </item>
    
    <item>
      <title>常用函数记录</title>
      <link>https://baniliy.github.io/python/%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 17 Feb 2023 20:31:47 +0800</pubDate>
      
      <guid>https://baniliy.github.io/python/%E5%9F%BA%E7%A1%80/</guid>
      <description>官方文档：3.10.0a4 Documentation 参考教程：Python 教程Python 集合（数组）&gt;Python 集合（数组） # Python 编程语言中有四种集合数据类型：
*列表（List）*是一种有序和可更改的集合。允许重复的成员。 *元组（Tuple）*是一种有序且不可更改的集合。允许重复的成员。 *集合（Set）*是一个无序和无索引的集合。没有重复的成员。 *词典（Dictionary）*是一个无序，可变和有索引的集合。没有重复的成员。 方法 描述 append() 在列表的末尾添加一个元素 clear() 删除列表中的所有元素 copy() 返回列表的副本 count() 返回具有指定值的元素数量。 extend() 将列表元素（或任何可迭代的元素）添加到当前列表的末尾 index() 返回具有指定值的第一个元素的索引 insert() 在指定位置添加元素 pop() 删除指定位置的元素 remove() 删除具有指定值的项目 reverse() 颠倒列表的顺序 sort() 对列表进行排序 元组（Tuple）&gt;元组（Tuple） # 元组是有序且不可更改的集合。在 Python 中，元组是用圆括号编写的。</description>
    </item>
    
  </channel>
</rss>
